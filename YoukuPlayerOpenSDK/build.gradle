apply plugin: 'com.android.library'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
//    compile files('libs/base.jar')
//    compile files('libs/playerBase.jar')
//    compile files('libs/fastjson-1.2.3.jar')
//    compile files('libs/mAppTracker_youtu.jar')
//    compile files('libs/mvvtracker.jar')
//    compile files('libs/tracking.jar')
//    compile files('libs/YoukuAnalytics.jar')
    testCompile 'junit:junit:4.12'
}

def jar_name = "youkuplayeropensdk.jar"

task sgh_generate_jar(type: Jar) {
    archiveName = jar_name
    from('build/intermediates/classes/debug')
}

task sgh_copy_jar_to_desktop(type: Copy) {
    destinationDir = file('/home/sunguohong/桌面/')
    from 'build/libs/' + jar_name
}

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.1"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
//            jniLibs.srcDirs = ['libs/armeabi-v7a']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    buildTypes {
        release {
            // 是否混淆
//            minifyEnabled true
            //Zipalign优化
//            zipAlignEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
